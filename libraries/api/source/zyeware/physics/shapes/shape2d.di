// This file was generated by ZyeWare APIgen. Do not edit!
module zyeware.physics.shapes.shape2d;


import std.typecons : Rebindable;
public import inmath.aabb;
import zyeware;

/// Represents a collision in 2D space.
struct Collision2d {

bool isColliding;

Rebindable!(const Shape2d) firstCollider;

Rebindable!(const Shape2d) secondCollider;

vec2 normal;

vec2 point;

float penetrationDepth;
}

/// Represents a projection of a polygon onto an axis.
struct Projection2d {

float min;

float max;

vec2 axis;
}

interface Shape2d {

Collision2d isCollidingWith(in mat4 thisTransform, in Shape2d other, in mat4 otherTransform) pure const nothrow;

Collision2d isRaycastColliding(in mat4 thisTransform, in vec2 rayOrigin, in vec2 rayDirection, float maxDistance) pure const nothrow;

Projection2d project(in mat4 thisTransform, in vec2 axis) pure const nothrow;

AABB2 getAABB(in mat4 thisTransform) pure const nothrow;
}