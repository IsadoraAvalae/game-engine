// This file was generated by ZyeWare APIgen. Do not edit!
module zyeware.rendering.display;


import zyeware;
import zyeware.pal;

struct DisplayProperties {

string title;

Flag!"resizable" resizable;

vec2i size;

Image icon;
}

class Display : NativeObject {

protected:

NativeHandle mNativeHandle;

DisplayProperties mProperties;

public:

this(DisplayProperties properties) {
mProperties = properties;
mNativeHandle = Pal.display.createDisplay(properties, this);
}

~this() {
Pal.display.destroyDisplay(mNativeHandle);
}

void update();

void swapBuffers();

bool isKeyPressed(KeyCode code) nothrow;

bool isMouseButtonPressed(MouseCode code) nothrow;

bool isGamepadButtonPressed(size_t gamepadIdx, GamepadButton button) nothrow;

float getGamepadAxisValue(size_t gamepadIdx, GamepadAxis axis) nothrow;

vec2i cursorPosition() const nothrow;

void isVSyncEnabled(bool value);

bool isVSyncEnabled() const nothrow;

const(NativeHandle) handle() pure const nothrow;

vec2i position() const nothrow;

void position(vec2i value);

vec2i size() const nothrow;

void size(vec2i value);

bool isFullscreen() const nothrow;

void isFullscreen(bool value);

bool isResizable() const nothrow;

void isResizable(bool value);

bool isDecorated() const nothrow;

void isDecorated(bool value);

bool isFocused() const nothrow;

void isFocused(bool value);

bool isVisible() const nothrow;

void isVisible(bool value);

bool isMinimized() const nothrow;

void isMinimized(bool value);

bool isMaximized() const nothrow;

void isMaximized(bool value);

bool isMouseCursorVisible() const nothrow;

void isMouseCursorVisible(bool value);

string title() const nothrow;

void title(string value);

bool isMouseCursorCaptured() const nothrow;

void isMouseCursorCaptured(bool value);

const(Image) icon() const nothrow;

void icon(in Image value);

string clipboardString();

void clipboardString(string value);

void cursor(in Cursor value);

const(Cursor) cursor() const;
}