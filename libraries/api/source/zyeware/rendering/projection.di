// This file was generated by ZyeWare APIgen. Do not edit!
module zyeware.rendering.projection;


import zyeware;

/// Provides common functionality between different types of cameras.
interface Projection {

public:

/// The projection matrix of this camera.
mat4 projectionMatrix() pure nothrow;

/// Calculates a new view matrix based on the given translation.
/// Params:
/// position = The position of the camera.
/// rotation = The rotation of the camera.
/// Returns: A newly calculated view matrix.
pragma(inline, true) static final mat4 calculateViewMatrix(vec3 position, quat rotation) pure nothrow;
}

/// Represents a camera with a orthographic projection.
class OrthographicProjection : Projection {

protected:

mat4 mProjectionMatrix;

float mLeft, mRight, mBottom, mTop, mNear, mFar;

bool mIsDirty;

pragma(inline, true) void recalculateProjectionMatrix() pure nothrow;

public:

this(float left, float right, float bottom, float top, float near = -1f, float far = 1f) pure nothrow {
mLeft = left;
mRight = right;
mBottom = bottom;
mTop = top;
mNear = near;
mFar = far;
recalculateProjectionMatrix();
}

mat4 projectionMatrix() pure nothrow;

float left() pure const nothrow;

float right() pure const nothrow;

float bottom() pure const nothrow;

float top() pure const nothrow;

float near() pure const nothrow;

float far() pure const nothrow;

void left(float value) pure nothrow;

void right(float value) pure nothrow;

void bottom(float value) pure nothrow;

void top(float value) pure nothrow;

void near(float value) pure nothrow;

void far(float value) pure nothrow;
}

class PerspectiveProjection : Projection {

protected:

mat4 mProjectionMatrix;

bool mIsDirty;

float mWidth;

float mHeight;

float mFov;

float mNear;

float mFar;

void recalculateProjectionMatrix() pure nothrow;

public:

this(float width, float height, float fov, float near = 0.001f, float far = 1000f) {
setData(width, height, fov, near, far);
}

final void setData(float width, float height, float fov, float near = 0.001f, float far = 1000f) pure nothrow;

mat4 projectionMatrix() pure nothrow;

float width() pure const nothrow;

float height() pure const nothrow;

float fov() pure const nothrow;

float near() pure const nothrow;

float far() pure const nothrow;

void width(float value) pure nothrow;

void height(float value) pure nothrow;

void fov(float value) pure nothrow;

void near(float value) pure nothrow;

void far(float value) pure nothrow;
}