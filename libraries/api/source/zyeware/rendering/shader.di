// This file was generated by ZyeWare APIgen. Do not edit!
module zyeware.rendering.shader;


import std.exception : enforce;
import std.regex : ctRegex, matchAll;
import std.typecons : Tuple;
import std.array : replaceInPlace;
import std.algorithm : countUntil;
import inmath.linalg;
import zyeware;
import zyeware.pal;

struct ShaderProperties {

enum ShaderType 
 {
vertex,
fragment,
geometry,
compute
}

string[ShaderType] sources;
}

@asset(Yes.cache) class Shader : NativeObject {

protected:

NativeHandle mNativeHandle;

ShaderProperties mProperties;

public:

this(ShaderProperties properties) {
mProperties = properties;
mNativeHandle = Pal.graphics.api.createShader(properties);
}

~this() {
Pal.graphics.api.freeShader(mNativeHandle);
}

const(NativeHandle) handle() pure const nothrow;

static Shader load(string path);
}