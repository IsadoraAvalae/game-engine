// This file was generated by ZyeWare APIgen. Do not edit!
module zyeware.vfs.disk.file;


import core.stdc.stdio;
import core.stdc.config : c_long;
import std.exception : enforce;
import std.string : toStringz;
import zyeware;

package(zyeware.vfs):

class VfsDiskFile : VfsFile {

protected:

string mDiskPath;

FILE* mStream;

FileSize mCachedFileSize;

package(zyeware.vfs):

this(string path, string diskPath) pure nothrow {
super(path);
mDiskPath = diskPath;
}

public:

~this() {
if (mStream)
fclose(mStream);
}

override size_t read(void* ptr, size_t size, size_t n) nothrow;

override size_t write(const void* ptr, size_t size, size_t n) nothrow;

override void seek(long offset, Seek whence) nothrow;

override long tell() nothrow;

override bool flush() nothrow;

override void open(VfsFile.Mode mode);

override void close() nothrow;

override FileSize size() nothrow;

override bool isOpened() pure const nothrow;

override bool isEof() pure nothrow;
}