// This file was generated by ZyeWare APIgen. Do not edit!
module zyeware.vfs.zip.dir;


import std.zip;
import std.string : split, format;
import std.exception : enforce;
import std.path : isRooted;
import zyeware;
import zyeware.vfs.zip.loader : VfsZipLoader;
import zyeware.vfs.zip.file : VfsZipFile;

package(zyeware.vfs):

class VfsZipDirectory : VfsDirectory {

protected:
alias FileNode = VfsZipLoader.FileNode;

enum NodeType 
 {
invalid,
directory,
file
}

FileNode* mRoot;

NodeType getNodeType(string path) pure const nothrow;

FileNode* traversePath(string path) pure const;

package(zyeware.vfs):

const ZipArchive mArchive;

this(string name, in ZipArchive archive, FileNode* root) pure nothrow {
super(name);
mArchive = archive;
mRoot = root;
}

public:

override VfsDirectory getDirectory(string name) const;

override VfsFile getFile(string name) const;

override bool hasDirectory(string name) const nothrow;

override bool hasFile(string name) const nothrow;

override immutable(string[]) files() const;

override immutable(string[]) directories() const;
}